// Code generated by protoc-gen-go.
// source: paxospb/paxos.proto
// DO NOT EDIT!

/*
Package paxospb is a generated protocol buffer package.

It is generated from these files:
	paxospb/paxos.proto

It has these top-level messages:
	ClientUpdate
	ViewChange
	ViewChangeProof
	Prepare
	PrepareOK
	Proposal
	Accept
	GloballyOrderedUpdate
*/
package paxospb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ClientUpdate struct {
	// the unique identifier of the sending client.
	ClientId uint64 `protobuf:"varint,1,opt,name=client_id,json=clientId" json:"client_id,omitempty"`
	// the unique identifier of this client's server.
	ServerId uint64 `protobuf:"varint,2,opt,name=server_id,json=serverId" json:"server_id,omitempty"`
	// the client sequence number for this update.
	Timestamp uint64 `protobuf:"varint,3,opt,name=timestamp" json:"timestamp,omitempty"`
	// the update being initiate by the client.
	Update []byte `protobuf:"bytes,4,opt,name=update,proto3" json:"update,omitempty"`
}

func (m *ClientUpdate) Reset()                    { *m = ClientUpdate{} }
func (m *ClientUpdate) String() string            { return proto.CompactTextString(m) }
func (*ClientUpdate) ProtoMessage()               {}
func (*ClientUpdate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type ViewChange struct {
	// the unique identifier of the sending server.
	ServerId uint64 `protobuf:"varint,1,opt,name=server_id,json=serverId" json:"server_id,omitempty"`
	// the view number this server is trying to install.
	Attempted uint64 `protobuf:"varint,2,opt,name=attempted" json:"attempted,omitempty"`
}

func (m *ViewChange) Reset()                    { *m = ViewChange{} }
func (m *ViewChange) String() string            { return proto.CompactTextString(m) }
func (*ViewChange) ProtoMessage()               {}
func (*ViewChange) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type ViewChangeProof struct {
	// the unique identifier of the sending server.
	ServerId uint64 `protobuf:"varint,1,opt,name=server_id,json=serverId" json:"server_id,omitempty"`
	// the last view number this server installed.
	Installed uint64 `protobuf:"varint,2,opt,name=installed" json:"installed,omitempty"`
}

func (m *ViewChangeProof) Reset()                    { *m = ViewChangeProof{} }
func (m *ViewChangeProof) String() string            { return proto.CompactTextString(m) }
func (*ViewChangeProof) ProtoMessage()               {}
func (*ViewChangeProof) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type Prepare struct {
	// the unique identifier of the sending server.
	ServerId uint64 `protobuf:"varint,1,opt,name=server_id,json=serverId" json:"server_id,omitempty"`
	// the view number being prepared.
	View uint64 `protobuf:"varint,2,opt,name=view" json:"view,omitempty"`
	// the local aru value of the leader.
	LocalAru uint64 `protobuf:"varint,3,opt,name=local_aru,json=localAru" json:"local_aru,omitempty"`
}

func (m *Prepare) Reset()                    { *m = Prepare{} }
func (m *Prepare) String() string            { return proto.CompactTextString(m) }
func (*Prepare) ProtoMessage()               {}
func (*Prepare) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type PrepareOK struct {
	// the unique identifier of the sending server.
	ServerId uint64 `protobuf:"varint,1,opt,name=server_id,json=serverId" json:"server_id,omitempty"`
	// the view number for which this message applies.
	View uint64 `protobuf:"varint,2,opt,name=view" json:"view,omitempty"`
	// the list of Proposals and GloballyOrderedUpdates.
	DataList []uint64 `protobuf:"varint,3,rep,name=data_list,json=dataList" json:"data_list,omitempty"`
}

func (m *PrepareOK) Reset()                    { *m = PrepareOK{} }
func (m *PrepareOK) String() string            { return proto.CompactTextString(m) }
func (*PrepareOK) ProtoMessage()               {}
func (*PrepareOK) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type Proposal struct {
	// the unique identifier of the sending server.
	ServerId uint64 `protobuf:"varint,1,opt,name=server_id,json=serverId" json:"server_id,omitempty"`
	// the view number in which this proposal is being made.
	View uint64 `protobuf:"varint,2,opt,name=view" json:"view,omitempty"`
	// the sequence number of this proposal.
	Seq uint64 `protobuf:"varint,3,opt,name=seq" json:"seq,omitempty"`
	// the client update being bound to seq in this proposal.
	Update *ClientUpdate `protobuf:"bytes,4,opt,name=update" json:"update,omitempty"`
}

func (m *Proposal) Reset()                    { *m = Proposal{} }
func (m *Proposal) String() string            { return proto.CompactTextString(m) }
func (*Proposal) ProtoMessage()               {}
func (*Proposal) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *Proposal) GetUpdate() *ClientUpdate {
	if m != nil {
		return m.Update
	}
	return nil
}

type Accept struct {
	// the unique identifier of the sending server.
	ServerId uint64 `protobuf:"varint,1,opt,name=server_id,json=serverId" json:"server_id,omitempty"`
	// the view number for which this message applies.
	View uint64 `protobuf:"varint,2,opt,name=view" json:"view,omitempty"`
	// the sequence number of the associated Proposal.
	Seq uint64 `protobuf:"varint,3,opt,name=seq" json:"seq,omitempty"`
}

func (m *Accept) Reset()                    { *m = Accept{} }
func (m *Accept) String() string            { return proto.CompactTextString(m) }
func (*Accept) ProtoMessage()               {}
func (*Accept) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

type GloballyOrderedUpdate struct {
	// the unique identifier of the sending server.
	ServerId uint64 `protobuf:"varint,1,opt,name=server_id,json=serverId" json:"server_id,omitempty"`
	// the sequence number of the update that was ordered.
	Seq uint64 `protobuf:"varint,2,opt,name=seq" json:"seq,omitempty"`
	// the client update bound to seq and globally ordered.
	Update *ClientUpdate `protobuf:"bytes,3,opt,name=update" json:"update,omitempty"`
}

func (m *GloballyOrderedUpdate) Reset()                    { *m = GloballyOrderedUpdate{} }
func (m *GloballyOrderedUpdate) String() string            { return proto.CompactTextString(m) }
func (*GloballyOrderedUpdate) ProtoMessage()               {}
func (*GloballyOrderedUpdate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *GloballyOrderedUpdate) GetUpdate() *ClientUpdate {
	if m != nil {
		return m.Update
	}
	return nil
}

func init() {
	proto.RegisterType((*ClientUpdate)(nil), "paxospb.ClientUpdate")
	proto.RegisterType((*ViewChange)(nil), "paxospb.ViewChange")
	proto.RegisterType((*ViewChangeProof)(nil), "paxospb.ViewChangeProof")
	proto.RegisterType((*Prepare)(nil), "paxospb.Prepare")
	proto.RegisterType((*PrepareOK)(nil), "paxospb.PrepareOK")
	proto.RegisterType((*Proposal)(nil), "paxospb.Proposal")
	proto.RegisterType((*Accept)(nil), "paxospb.Accept")
	proto.RegisterType((*GloballyOrderedUpdate)(nil), "paxospb.GloballyOrderedUpdate")
}

func init() { proto.RegisterFile("paxospb/paxos.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 340 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x93, 0x5f, 0x4b, 0xf3, 0x30,
	0x14, 0x87, 0xe9, 0x3a, 0xf6, 0xe7, 0xbc, 0x83, 0x57, 0x2a, 0x93, 0x82, 0x5e, 0x8c, 0x5e, 0xed,
	0xc6, 0x09, 0xfa, 0x09, 0xc6, 0x2e, 0xc6, 0xd8, 0x60, 0x63, 0xa0, 0xe2, 0xd5, 0xc8, 0x9a, 0xa3,
	0x06, 0xb2, 0x25, 0x26, 0xa7, 0x9b, 0x82, 0xf8, 0xd9, 0xa5, 0x59, 0x5c, 0x1d, 0x2a, 0x53, 0xf1,
	0xaa, 0xc9, 0x73, 0xc8, 0xf3, 0x4b, 0x9a, 0x13, 0x38, 0xd4, 0xec, 0x51, 0x59, 0x3d, 0x3f, 0x73,
	0xdf, 0x8e, 0x36, 0x8a, 0x54, 0x54, 0xf5, 0x30, 0x79, 0x81, 0x46, 0x4f, 0x0a, 0x5c, 0xd2, 0xa5,
	0xe6, 0x8c, 0x30, 0x3a, 0x86, 0x7a, 0xea, 0xe6, 0x33, 0xc1, 0xe3, 0xa0, 0x15, 0xb4, 0xcb, 0xd3,
	0xda, 0x06, 0x0c, 0x78, 0x5e, 0xb4, 0x68, 0x56, 0x68, 0xf2, 0x62, 0x69, 0x53, 0xdc, 0x80, 0x01,
	0x8f, 0x4e, 0xa0, 0x4e, 0x62, 0x81, 0x96, 0xd8, 0x42, 0xc7, 0xa1, 0x2b, 0x16, 0x20, 0x3a, 0x82,
	0x4a, 0xe6, 0x12, 0xe2, 0x72, 0x2b, 0x68, 0x37, 0xa6, 0x7e, 0x96, 0xf4, 0x01, 0xae, 0x04, 0xae,
	0x7b, 0xf7, 0x6c, 0x79, 0x87, 0xbb, 0x01, 0xc1, 0xc7, 0x00, 0x46, 0x84, 0x0b, 0x4d, 0xf8, 0x96,
	0x5e, 0x80, 0x64, 0x04, 0xff, 0x0b, 0xd1, 0xc4, 0x28, 0x75, 0xbb, 0xd7, 0x26, 0x96, 0x96, 0x98,
	0x94, 0x85, 0x6d, 0x0b, 0x92, 0x6b, 0xa8, 0x4e, 0x0c, 0x6a, 0x66, 0xf6, 0xec, 0x29, 0x82, 0xf2,
	0x4a, 0xe0, 0xda, 0x0b, 0xdc, 0x38, 0x5f, 0x20, 0x55, 0xca, 0xe4, 0x8c, 0x99, 0xcc, 0xff, 0x88,
	0x9a, 0x03, 0x5d, 0x93, 0x25, 0x37, 0x50, 0xf7, 0xe2, 0xf1, 0xf0, 0x57, 0x6a, 0xce, 0x88, 0xcd,
	0xa4, 0xb0, 0x14, 0x87, 0xad, 0x30, 0x5f, 0x90, 0x83, 0x91, 0xb0, 0x94, 0x3c, 0x43, 0x6d, 0x62,
	0x94, 0x56, 0x96, 0xc9, 0x9f, 0x9b, 0x0f, 0x20, 0xb4, 0xf8, 0xe0, 0xb7, 0x9b, 0x0f, 0xa3, 0xd3,
	0x9d, 0x1b, 0xfb, 0x77, 0xde, 0xec, 0xf8, 0x9e, 0xe9, 0xbc, 0x6f, 0x98, 0xed, 0x45, 0x0e, 0xa1,
	0xd2, 0x4d, 0x53, 0xd4, 0xf4, 0x07, 0xd9, 0x49, 0x06, 0xcd, 0xbe, 0x54, 0x73, 0x26, 0xe5, 0xd3,
	0xd8, 0x70, 0x34, 0xc8, 0x8b, 0xf6, 0xfc, 0xda, 0xed, 0x3d, 0xa5, 0xcf, 0xce, 0x10, 0x7e, 0xe3,
	0x0c, 0xf3, 0x8a, 0x7b, 0x1c, 0x17, 0xaf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x21, 0xac, 0x9f, 0x1d,
	0x33, 0x03, 0x00, 0x00,
}
