syntax = "proto3";
package paxospb;

message ClientUpdate {
    // the unique identifier of the sending client.
    uint64 client_id = 1;
    // the unique identifier of this client's node.
    uint64 node_id = 2;
    // the client sequence number for this update.
    uint64 timestamp = 3;
    // the update being initiate by the client.
    bytes update = 4;
}

message ViewChange {
    // the unique identifier of the sending node.
    uint64 node_id = 1;
    // the view number this node is trying to install.
    uint64 attempted_view = 2;
}

message ViewChangeProof {
    // the unique identifier of the sending node.
    uint64 node_id = 1;
    // the last view number this node installed.
    uint64 installed_view = 2;
}

message Prepare {
    // the unique identifier of the sending node.
    uint64 node_id = 1;
    // the view number being prepared.
    uint64 view = 2;
    // the local aru value of the leader.
    uint64 local_aru = 3;
}

message PrepareOK {
    // the unique identifier of the sending node.
    uint64 node_id = 1;
    // the view number for which this message applies.
    uint64 view = 2;
    // the list of Proposals and GloballyOrderedUpdates.
    repeated Message data_list = 3;
}

message Proposal {
    // the unique identifier of the sending node.
    uint64 node_id = 1;
    // the view number in which this proposal is being made.
    uint64 view = 2;
    // the sequence number of this proposal.
    uint64 seq = 3;
    // the client update being bound to seq in this proposal.
    ClientUpdate update = 4;
}

message Accept {
    // the unique identifier of the sending node.
    uint64 node_id = 1;
    // the view number for which this message applies.
    uint64 view = 2;
    // the sequence number of the associated Proposal.
    uint64 seq = 3;
}

message GloballyOrderedUpdate {
    // the unique identifier of the sending node.
    uint64 node_id = 1;
    // the sequence number of the update that was ordered.
    uint64 seq = 2;
    // the client update bound to seq and globally ordered.
    ClientUpdate update = 3;
}

message Message {
    // the destination of this message.
    uint64 to = 1;
    // the type of the message.
    oneof type {
        ViewChange            view_change             = 2;
        ViewChangeProof       view_change_proof       = 3;
        Prepare               prepare                 = 4;
        PrepareOK             prepare_ok              = 5;
        Proposal              proposal                = 6;
        Accept                accept                  = 7;
        GloballyOrderedUpdate globally_ordered_update = 8;
        ClientUpdate          client_update           = 9;
    }
}

message PersistentState {
    // the unique identifier of this node.
    uint64 node_id = 1;
    // the number of nodes in this paxos instance.
    uint64 node_count = 2;
    // the last installed view number.
    uint64 last_installed = 3;
    // the Prepare message from the last preinstalled view, if received.
    Prepare prepare = 4;
    // the latest accepted proposal.
    Proposal proposal = 5;
}
